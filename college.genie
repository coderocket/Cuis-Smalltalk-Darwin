
Parameters

epochs: 			30 
generations: 20 

population: 			3800
instances: 			288

mutationp :			1.0e-5
inversionp :			1.0e-1

Schema 
 
room : 			1 .. 8
floor :			1 .. 4
day : 			1 .. 5
hour : 			hour(day)
lecturer : 			lecturer(module(id))

Functions

hour

# day           hour

1                  8 .. 17
2                  8 .. 17
3                  8 .. 17
4                  8 .. 17
5                  8 .. 17
6                  8 .. 13

duration 

# module			duration

1 			3
2			2 
3			3
4			2
5			3
6			2
7 			3
8			2 
9			3
10			2
11			3
12			2 
13			3
14			2
15			3
16			2
17 			3
18			2
19			3
20			2
21 			3
22			2
23			3
24			2

lecturer 

# module     suitable lecturers

1 .. 24  			1 .. 42

frame

# id              frame

0 .. 7								1 			
8 .. 15								2
16 .. 23								3
24 .. 31								4
32 .. 39								5
40 .. 47								6
48 .. 55								7
56 .. 63								8
64 .. 71								9
72 .. 79								10
80 .. 87								11
88 .. 95								12
96 .. 103								13
104 .. 111								14
112 .. 119								15
120 .. 127								16
128 .. 135								17
136 .. 143								18
144 .. 151								19
152 .. 159								20
160 .. 167								21
168 .. 175								22
176 .. 183								23
184 .. 191								24
192 .. 199								25
200 .. 207								26
208 .. 215								27
216 .. 223								28
224 .. 231								29
232 .. 239								30
240 .. 247								31
248 .. 255								32
256 .. 263								33
264 .. 271								34
272 .. 279								35
280 .. 287								36

module

# id		module

0		1
1		2
2		3
3		4
4		5
5		6
6		7
7		8
8		1
9		2
10		3
11		4
12		5
13		6
14		7
15		8
16		1
17		2
18		3
19		4
20		5
21		6
22		7
23		8
24		1
25		2
26		3
27		4
28		5
29		6
30		7
31		8
32		1
33		2
34		3
35		4
36		5
37		6
38		7
39		8
40		1
41		2
42		3
43		4
44		5
45		6
46		7
47		8
48		1
49		2
50		3
51		4
52		5
53		6
54		7
55		8
56		1
57		2
58		3
59		4
60		5
61		6
62		7
63		8
64		1
65		2
66		3
67		4
68		5
69		6
70		7
71		8
72		1
73		2
74		3
75		4
76		5
77		6
78		7
79		8
80		1
81		2
82		3
83		4
84		5
85		6
86		7
87		8
88		1
89		2
90		3
91		4
92		5
93		6
94		7
95		8
96		9
97		10
98		11
99		12
100		13
101		14
102		15
103		16
104		9
105		10
106		11
107		12
108		13
109		14
110		15
111		16
112		9
113		10
114		11
115		12
116		13
117		14
118		15
119		16
120		9
121		10
122		11
123		12
124		13
125		14
126		15
127		16
128		9
129		10
130		11
131		12
132		13
133		14
134		15
135		16
136		9
137		10
138		11
139		12
140		13
141		14
142		15
143		16
144		9
145		10
146		11
147		12
148		13
149		14
150		15
151		16
152		9
153		10
154		11
155		12
156		13
157		14
158		15
159		16
160		9
161		10
162		11
163		12
164		13
165		14
166		15
167		16
168		9
169		10
170		11
171		12
172		13
173		14
174		15
175		16
176		9
177		10
178		11
179		12
180		13
181		14
182		15
183		16
184		9
185		10
186		11
187		12
188		13
189		14
190		15
191		16
192		17
193		18
194		19
195		20
196		21
197		22
198		23
199		24
200		17
201		18
202		19
203		20
204		21
205		22
206		23
207		24
208		17
209		18
210		19
211		20
212		21
213		22
214		23
215		24
216		17
217		18
218		19
219		20
220		21
221		22
222		23
223		24
224		17
225		18
226		19
227		20
228		21
229		22
230		23
231		24
232		17
233		18
234		19
235		20
236		21
237		22
238		23
239		24
240		17
241		18
242		19
243		20
244		21
245		22
246		23
247		24
248		17
249		18
250		19
251		20
252		21
253		22
254		23
255		24
256		17
257		18
258		19
259		20
260		21
261		22
262		23
263		24
264		17
265		18
266		19
267		20
268		21
269		22
270		23
271		24
272		17
273		18
274		19
275		20
276		21
277		22
278		23
279		24
280		17
281		18
282		19
283		20
284		21
285		22
286		23
287		24

table timetable

# lecturer    day        cordoned hours

1			1		8 .. 17
	
Keys

module : module(id)
frame : frame(id)
duration : duration(module)

Rules

bonus 10 ;

# a lecturer must not teach on days and hours that they have cordoned

# penalty for interval in timetable(lecturer, day) intersect(interval, hour .. hour + duration) ;

# a lecturer must not teach more than 5 hours on the same day
 
#penalty group by (day, lecturer) sum(duration) - 5 max 0 ;
 
# gap between lectures on the same day for the same lecturer should not exceed 3 hours 

#penalty group by (day, lecturer) maxgap(hour .. hour + duration) - 3 max 0 ;

# lectures on the same day for the same lecturer should be separated by at least 1 hour 

#penalty group by (day, lecturer) 1 - mingap(hour .. hour + duration) max 0 ;

# gap between lectures on the same day for the same frame should not exceed 3 hours

#penalty group by (day, frame) maxgap(hour .. hour + duration) - 3 max 0 ;

# each frame must have one free day
 
#penalty group by (frame) count(day) - 4 max 0 ;

# lectures cannot be assigned to the same room on the same day and hours

penalty group by (day, floor, room) overlap(hour .. hour + duration) ;

# lectures cannot be assigned to the same lecturer on the same day and hours

penalty group by (day, lecturer) overlap(hour .. hour + duration) ;

# lectures must not be held on wednesday at 1pm
 
# penalty (day = 4) * (hour <= 13) *(13 <= hour + duration);

# lectures must end by 17

penalty hour + duration - 17 max 0 ;

# lectures cannot be assigned to the same group on the same day and hours

penalty group by (day, frame) overlap(hour .. hour + duration) ;

# lectures on the same day for the same frame should be separated by at least 1 hour 

# penalty group by (day, frame) 1 - mingap(hour .. hour + duration) max 0 ;
